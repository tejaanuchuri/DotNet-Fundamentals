dotnet : 
     1. is free
     2. cross platform
     3. open source developer platform
     4. you can use  multiple languages, editors, and libraries to build for web, mobile, desktop, games, and IoT.

languages:

    You can write .NET apps in C#, F#, or Visual Basic.
    1. C# is a simple, modern, object-oriented, and type-safe programming language
       (https://dev.to/vjnvisakh/what-the-hell-is-type-safe-language-34bm).
    2. F# is a cross-platform, open-source, functional programming language for .NET.
       It also includes object-oriented and imperative programming.
    3. Visual Basic is an approachable language with a simple syntax for building type-safe, object-oriented apps.

Cross platform:

    1. Whether you're working in C#, F#, or Visual Basic, your code will run natively on any compatible OS. 
    2.  Different .NET implementations are:

        1. .NET Core is a cross-platform .NET implementation for websites, servers, and console apps on Windows, Linux, and macOS.
        2. .NET Framework supports websites, services, desktop apps, and more on Windows.
        3.  Xamarin/Mono is a .NET implementation for running apps on all the major mobile operating systems.

One consistent API:
    1. .NET Standard is a base set of APIs that are common to all .NET implementations.

Libraries:
    1. To extend functionality, Microsoft and others maintain a healthy package ecosystem built on .NET Standard.
    2. NuGet is a package manager built specifically for .NET that contains over 90,000 packages.

Application models: 
    1. You can build many types of apps with .NET. Some are cross-platform, and some target a specific OS or .NET implementation.
        1. web
        2. mobile
        3. desktop
        4. microservices
        5. game development
        6. machine learning 
        7. cloud
        8. internet of things



